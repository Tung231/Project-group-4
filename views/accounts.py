import streamlit as st
import pandas as pd
import sys
sys.path.append(".")

import database as db
from utils import format_vnd, money_input, show_toast
from ui_components import render_table

def render_page(user_id):
    st.title("üëõ V√≠ / T√†i kho·∫£n")

    accounts_df = db.get_accounts_with_balance(user_id)

    if accounts_df.empty:
        st.info("Ch∆∞a c√≥ v√≠ n√†o.")
    else:
        display_df = pd.DataFrame({
            "T√™n": accounts_df["name"],
            "Lo·∫°i": accounts_df["type"].map({"cash":"Ti·ªÅn m·∫∑t","bank":"T√†i kho·∫£n ng√¢n h√†ng","card":"Th·∫ª"}),
            "Ti·ªÅn t·ªá": accounts_df["currency"],
            "S·ªë d∆∞ hi·ªán t·∫°i": accounts_df["balance"].map(format_vnd)
        })
        render_table(display_df, default_sort_col="S·ªë d∆∞ hi·ªán t·∫°i", default_asc=False, key_suffix="accounts",
                     show_type_filters=False, show_sort_controls=True)

    st.markdown("#### Th√™m v√≠ m·ªõi")
    account_name = st.text_input("T√™n v√≠ (tu·ª≥ ch·ªçn)")
    account_type = st.selectbox("Lo·∫°i",["cash","bank","card"], format_func=lambda x: {"cash":"Ti·ªÅn m·∫∑t","bank":"T√†i kho·∫£n ng√¢n h√†ng","card":"Th·∫ª"}[x])
    opening_balance = money_input("S·ªë d∆∞ ban ƒë·∫ßu (VND)", key="open_balance", placeholder="VD: 2.000.000")

    if st.button("Th√™m v√≠", type="primary"):
        default_name = {"cash":"Ti·ªÅn m·∫∑t","bank":"T√†i kho·∫£n ng√¢n h√†ng","card":"Th·∫ª"}[account_type]
        db.add_account(user_id, account_name or default_name, account_type, opening_balance)
        show_toast("ƒê√£ th√™m v√≠ m·ªõi!")
        if "open_balance__ui" in st.session_state:
            del st.session_state["open_balance__ui"]
        st.rerun()