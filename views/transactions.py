import streamlit as st
import datetime as dt
import sys
sys.path.append(".")

import database as db
from utils import money_input, join_date_time, show_toast, show_ephemeral_notice

def render_page(user_id):
    st.title("üßæ Th√™m giao d·ªãch m·ªõi")

    accounts = db.get_accounts(user_id)
    if accounts.empty:
        st.warning("‚ö†Ô∏è Vui l√≤ng t·∫°o √≠t nh·∫•t 1 t√†i kho·∫£n tr∆∞·ªõc khi th√™m giao d·ªãch.")
        st.stop()

    transaction_type_display = st.radio("Lo·∫°i giao d·ªãch", ["Chi ti√™u", "Thu nh·∫≠p"], horizontal=True)
    transaction_type = "expense" if transaction_type_display == "Chi ti√™u" else "income"

    all_categories = db.get_categories(user_id, transaction_type)
    if all_categories.empty:
        st.warning("‚ö†Ô∏è Ch∆∞a c√≥ danh m·ª•c ph√π h·ª£p. H√£y t·∫°o danh m·ª•c ·ªü trang 'Danh m·ª•c' tr∆∞·ªõc.")
        st.stop()

    parent_categories = all_categories[all_categories["parent_id"].isna()].copy().sort_values("name")
    parent_name = st.selectbox("Danh m·ª•c", parent_categories["name"])
    parent_id = int(parent_categories.loc[parent_categories["name"] == parent_name, "id"].iloc[0])

    child_categories = all_categories[all_categories["parent_id"] == parent_id].copy().sort_values("name")
    child_options = ["(Kh√¥ng)"] + (child_categories["name"].tolist() if not child_categories.empty else [])
    child_name = st.selectbox("Danh m·ª•c con (n·∫øu c√≥)", child_options, index=0)

    category_id = parent_id if (child_name == "(Kh√¥ng)" or child_categories.empty) else int(child_categories.loc[child_categories["name"] == child_name, "id"].iloc[0])

    account_name = st.selectbox("Ch·ªçn v√≠/t√†i kho·∫£n", accounts["name"])
    account_id = int(accounts.loc[accounts["name"] == account_name, "id"].iloc[0])

    amount = money_input("üí∞ S·ªë ti·ªÅn (VND)", key="add_tx_amount", placeholder="VD: 5.000.000")
    notes = st.text_input("üìù Ghi ch√∫ (t√πy ch·ªçn)")

    use_current_time = st.checkbox("D√πng th·ªùi gian hi·ªán t·∫°i", value=True)
    if use_current_time:
        occurred_datetime = dt.datetime.now().strftime("%Y-%m-%d %H:%M")
    else:
        transaction_date = st.date_input("Ng√†y giao d·ªãch", value=dt.date.today())
        transaction_time = st.time_input("Gi·ªù giao d·ªãch", value=dt.datetime.now().time().replace(second=0, microsecond=0))
        occurred_datetime = join_date_time(transaction_date, transaction_time)

    if st.button("üíæ L∆∞u giao d·ªãch", type="primary", use_container_width=True):
        try:
            if amount <= 0:
                show_ephemeral_notice("S·ªë ti·ªÅn ph·∫£i l·ªõn h∆°n 0.", "error")
                st.stop()
            db.add_transaction(user_id, account_id, transaction_type, category_id, amount, notes, occurred_datetime)
            show_toast("ƒê√£ th√™m giao d·ªãch th√†nh c√¥ng")
            if "add_tx_amount__ui" in st.session_state:
                del st.session_state["add_tx_amount__ui"]
            st.rerun()
        except Exception as e:
            show_ephemeral_notice(f"L∆∞u th·∫•t b·∫°i. Vui l√≤ng ki·ªÉm tra l·∫°i d·ªØ li·ªáu. ({e})", "error")